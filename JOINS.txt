* NATURAL JOIN *
================
A natural join is possible when the source and target tables share identically named columns.
i.e. they may be naturally joined without specifying join columns
 
-- natural join example
-- natural join instructs oracle to identify columns with identical names between the source and target tables
-- countries is the soruce below
-- regions is the target
--the identical matching column in both source and target is 'region_id'
select *
from countries natural join regions
where region_name='Americas';
-- for each row in the regions table, a match for the REGION_ID columnis sought from all rows
-- in the countries column.
 
 
-- Sometimes more control is required to be excercised as to which columns to use for joins.
--Then you need the JOIN... USING syntax.
select *
from countries join regions
using (region_id)
where region_name='Americas';
 
 
-- Sometimes even more more control is required to be excercised as to which columns to use for joins.
--Then you need the JOIN... ON syntax.
-- This allows you to explicitly state the columns of the join to be included.
 
select *
from countries join regions
on (countries.region_id=regions.region_id)
where region_name='Americas';
 
select *
from ref_map  JOIN ref_user
on (ref_map.user_name=ref_user.id)
where user_name='1234';
 
 
 
* OUTER JOIN *
================
Not all tables share the perfect relationship where every source record can be matched to rows in a target table
Sometimes, it may be necessary to identify rows with non-matching join column values
-- An outer join fetches these rows
 
 
* CROSS JOIN *
================
A cross join or catesian product is also referred to as a cross product between the two sets or matrices.
This join creates one row for every combination of source and target table and is usually non intended!
 
 
* Oracle JOIN Syntax (Proprietary) *
====================================
A proprietary oracle join syntax has evolved that is stable and understood by millions of user. This traditional join syntax is supported by oracle and
present across the world in many software systems.

select logical_user_name, in_use, forename
from ref_user_name_map join ref_agent
on (ref_user_name_map.logical_user_name=ref_agent.id)
where logical_user_name = '8888';
 
 
-- Traditional oracle SQL join syntax main difference
-- is the join condition contained in the where clause
select *
from ref_user_name_map, ref_agent
where logical_user_name = '8888'
and REF_USER_NAME_MAP.LOGICAL_USER_NAME=REF_AGENT.ID;


- EXAMPLE - 
SQL> select e.sal, e.deptno, d.dname
  2  from scott.emp e, scott.dept d
  3  where e.sal>1000 
  4  and
  5  e.deptno=d.deptno ; 

       SAL     DEPTNO DNAME
---------- ---------- --------------
      2450         10 ACCOUNTING
      5000         10 ACCOUNTING
      1300         10 ACCOUNTING
      3000         20 RESEARCH
      2975         20 RESEARCH
      3000         20 RESEARCH
      1100         20 RESEARCH
      1600         30 SALES
      1250         30 SALES
      1500         30 SALES
      2850         30 SALES
      1250         30 SALES



Useful for looking at columns to match?
-----------------------------------------
SQL> select owner, constraint_name, table_name, r_owner, r_constraint_name status from user_constraints;
OWNER        CONSTRAINT_NAME                TABLE_NAME                     R_OWNER                        STATUS
------------ ------------------------------ ------------------------------ ------------------------------ ------------------------------
SCOTT        PK_DEPT                        DEPT
SCOTT        PK_EMP                         EMP
SCOTT        FK_DEPTNO                      EMP                            SCOTT                          PK_DEPT
Elapsed: 00:00:00.71


SQL> select * from user_cons_columns;
OWNER        CONSTRAINT_NAME                TABLE_NAME                     COLUMN_NAME              POSITION
------------ ------------------------------ ------------------------------ ---------------------- ----------
SCOTT        PK_DEPT                        DEPT                           DEPTNO                          1
SCOTT        FK_DEPTNO                      EMP                            DEPTNO                          1
SCOTT        PK_EMP                         EMP                            EMPNO                           1
Elapsed: 00:00:00.22